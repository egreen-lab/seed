apply plugin: 'osgi'
jar {
    manifest { // the manifest of the default jar is of type OsgiManifest
        name = 'Seed User Module'
//        instruction 'Bundle-Activator', 'org.egreen.seed.usermanagment.SeedActivator'
        instruction 'Bundle-Description', 'Platform2: Metrics 2 Measures Framework'
        instruction 'Bundle-DocURL', 'http://www.mycompany.com'
        instruction 'Import-Package', 'org.osgi.framework;version="[1.3,2)",' +
                'javax.jdo.annotations;version="[3.1,4)",' +
                'org.egreen.seed.datastore.service,' +
                'org.egreen.seed.datastore.service.impl,' +
                'org.egreen.seed.usermanagment.model,' +
                'org.egreen.seed.usermanagment.service,' +
                'org.egreen.seed.datastore.model,' +
                'org.datanucleus.enhancement,' +
                'org.datanucleus.enhancer,' +
                'org.datanucleus.identity,' +
                'javax.jdo.annotations,' +
                'javax.jdo'
    }
}


dependencies {
    compile group: 'org.datanucleus', name: 'datanucleus-core', version: '[4.0.0-release, )'
    compile group: 'org.datanucleus', name: 'datanucleus-rdbms', version: '[4.0.0-release, )'
    compile group: 'org.datanucleus', name: 'datanucleus-api-jdo', version: '[4.0.0-release, )'
    compile group: 'javax.jdo', name: 'jdo-api', version: '3.1-rc1'


    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile(group: 'org.apache.felix', name: 'org.osgi.core', version: '1.0.0') {
        /* This dependency was originally in the Maven provided scope, but the project was not of type war.
        This behavior is not yet supported by Gradle, so this dependency has been converted to a compile dependency.
        Please review and delete this closure when resolved. */
    }
    compile project(':datastore')
    compile project(':transport.http')

}
configurations {
    jdo {
        extendsFrom compile
    }
}
dependencies {
    compile 'org.datanucleus:datanucleus-core:1.1.5',
            'javax.jdo:jdo2-api:2.3-eb'
    jdo 'org.datanucleus:datanucleus-enhancer:1.1.4'
    testCompile 'junit:junit:4.7'

}

task jdoEnhance << {
    ant.taskdef(name: 'enhancer', classname: 'org.datanucleus.enhancer.tools.EnhancerTask', classpath: configurations.jdo.asPath)
    ant.enhancer(dir: sourceSets.main.output.classesDir.canonicalPath.toURI().toString(), verbose: 'true') {
        classpath {
            pathelement(location: sourceSets.main.output.classesDir.canonicalPath.toURI().toString())
            pathelement(path: configurations.jdo.asPath)
        }
        fileset(dir: sourceSets.main.output.classesDir.canonicalPath.toURI().toString()) {
            include(name: 'org/egreen/seed/usermanagment/model/*.class')
        }
    }
}
task datanucleusEnhance {
    description "Enhance JPA model classes using DataNucleus Enhancer"
    dependsOn compileJava

    doLast {
        // define the entity classes
        def entityFiles = fileTree(sourceSets.main.output.classesDir).matching {
            include 'org/egreen/seed/usermanagment/model/*.class', 'org/egreen/seed/usermanagment/model/*.class'
        }

        println "Enhancing with DataNucleus the following files"
        entityFiles.getFiles().each {
            println it
        }

        // define Ant task for DataNucleus Enhancer
        ant.taskdef(
                name : 'datanucleusenhancer',
                classpath : sourceSets.main.runtimeClasspath.asPath,
                classname : 'org.datanucleus.enhancer.EnhancerTask'
        )

        // run the DataNucleus Enhancer as an Ant task
        ant.datanucleusenhancer(
                classpath: sourceSets.main.runtimeClasspath.asPath,
                verbose: true,
                api: "JPA") {
            entityFiles.addToAntBuilder(ant, 'fileset', FileCollection.AntType.FileSet)
        }
    }
}

classes.dependsOn jdoEnhance